{"import express from 'express';\nimport http from 'http';\nimport cors from 'cors';\nimport helmet from 'helmet';\n\nimport authRoutes, { authMiddleware } from './auth/routes';\nimport paymentsHistory from './payments/history';\nimport paymentsReceipt from './payments/receipt';\nimport paystackWebhook from './payments/webhook';\n\nimport subscriptionsRoutes from './subscriptions/routes';\nimport partnersRoutes from './partners/routes';\nimport auditRoutes from './audit/routes';\nimport driversRoutes from './drivers/routes';\nimport jobsDispatch from './jobs/dispatch';\nimport jobsUpload from './jobs/upload';\nimport companyRoutes from './company/routes';\nimport contractsRoutes from './contracts/routes';\nimport nationRoutes from './nation/routes';\nimport federationRoutes from './federation/routes';\nimport advisorRoutes from './advisor/routes';\nimport integrationsWebhooks from './integrations/webhooks';\nimport storeRoutes from './integrations/stores';\n\nimport { initRealtime } from './realtime';\n\nconst app = express();\napp.use(express.json());\napp.use(cors({ origin: process.env.FRONTEND_ORIGIN, credentials: true }));\napp.use(helmet());\n\n// Public\napp.use('/api/auth', authRoutes);\napp.use('/api/payments', paymentsHistory);\napp.use('/api/payments', paymentsReceipt);\napp.use('/api/payments', paystackWebhook);\napp.use('/api/integrations', integrationsWebhooks);\n\n// Authenticated\napp.use('/api/subscriptions', authMiddleware, subscriptionsRoutes);\napp.use('/api/partners', authMiddleware, partnersRoutes);\napp.use('/api/audit', authMiddleware, auditRoutes);\napp.use('/api/drivers', authMiddleware, driversRoutes);\napp.use('/api/jobs', authMiddleware, jobsDispatch);\napp.use('/api/jobs', authMiddleware, jobsUpload);\napp.use('/api/company', authMiddleware, companyRoutes);\napp.use('/api/contracts', authMiddleware, contractsRoutes);\napp.use('/api/nation', authMiddleware, nationRoutes);\napp.use('/api/federation', authMiddleware, federationRoutes);\napp.use('/api/advisor', authMiddleware, advisorRoutes);\napp.use('/api/integrations', authMiddleware, storeRoutes);\n\n// HTTP + Socket.io\nconst httpServer = http.createServer(app);\ninitRealtime(httpServer);\n\nhttpServer.listen(process.env.PORT || 3001);"