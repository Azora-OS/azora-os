// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id          String       @id @default(cuid())
  name        String
  vatNumber   String?
  accessTier  String       @default("full") // full|limited
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  users       User[]
  jobs        Job[]
  drivers     Driver[]
  invoices    Invoice[]
  settlements Settlement[]
  subscriptions Subscription[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      String   // admin|dispatcher|viewer
  companyId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company   Company  @relation(fields: [companyId], references: [id])
}

model Driver {
  id        String   @id @default(cuid())
  companyId String
  name      String
  phone     String?
  licenseId String?
  createdAt DateTime @default(now())

  company   Company  @relation(fields: [companyId], references: [id])
  jobs      Job[]
}

model Job {
  id          String   @id @default(cuid())
  companyId   String
  title       String
  pickup      String
  dropoff     String
  cargoType   String?
  driverId    String?
  status      String   @default("scheduled") // scheduled|in_progress|completed|canceled
  scheduledAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  company     Company  @relation(fields: [companyId], references: [id])
  driver      Driver?  @relation(fields: [driverId], references: [id])
}

model Invoice {
  id          String   @id @default(cuid())
  companyId   String   @index
  subId       String?
  amountCents Int
  vatCents    Int
  currency    String
  periodStart DateTime
  periodEnd   DateTime
  pdfUrl      String?
  status      String   // issued|paid|void
  createdAt   DateTime @default(now())

  company     Company  @relation(fields: [companyId], references: [id])
}

model Settlement {
  id            String   @id @default(cuid())
  jobId         String
  ownerCompany  String   @index
  subcontractor String   @index
  amountCents   Int
  feeCents      Int
  status        String   // pending|paid
  createdAt     DateTime @default(now())

  // Relations are optional here if jobs can cross-tenant
}

model Subscription {
  id               String   @id @default(cuid())
  companyId        String   @index
  plan             String   // starter|growth|enterprise
  status           String   // active|past_due|canceled
  currentPeriodEnd DateTime
  paystackCustomer String
  paystackAuthCode String?
  billingEmail     String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  company          Company  @relation(fields: [companyId], references: [id])
}

model AuditEvent {
  id        String   @id @default(cuid())
  companyId String
  actor     String   // userId or 'system'
  action    String
  details   Json
  createdAt DateTime @default(now())
}