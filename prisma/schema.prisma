// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  role          String   // 'admin' | 'driver' | 'dispatcher' | 'partner'
  passwordHash  String
  companyId     String?
  company       Company? @relation(fields: [companyId], references: [id])
  createdAt     DateTime @default(now())
  payments      Payment[]
}

model Company {
  id                 String   @id @default(cuid())
  name               String
  vatNumber          String?
  vatPercent         Int      @default(15)
  billingEmail       String?
  popiaConsent       Boolean  @default(false)
  pilotActive        Boolean  @default(false)
  pilotActivatedAt   DateTime?
  subscriptionStatus String   @default("none") // 'none' | 'active' | 'past_due' | 'canceled'
  tenants            Tenant[]
  jobs               Job[]
  payments           Payment[]
  createdAt          DateTime @default(now())
}

model Job {
  id         String   @id @default(cuid())
  companyId  String
  company    Company  @relation(fields: [companyId], references: [id])
  ref        String
  pickup     Json
  dropoff    Json
  status     String   // 'new' | 'assigned' | 'in_transit' | 'delivered' | 'failed'
  driverId   String?
  etaMinutes Int?
  tracking   Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([ref, companyId], name: "ref_companyId")
}

model Payment {
  id        String   @id @default(cuid())
  reference String   @unique
  provider  String   // 'paystack' | 'yoco'
  status    String   // 'success' | 'failed' | 'pending'
  amount    Int
  currency  String
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
  raw       Json
  createdAt DateTime @default(now())
}

model Plan {
  id             String  @id @default(cuid())
  code           String  @unique
  name           String
  priceZarCents  Int
  interval       String  // 'monthly' | 'annual'
  features       Json
  active         Boolean @default(true)
}

model Subscription {
  id               String   @id @default(cuid())
  companyId        String
  company          Company  @relation(fields: [companyId], references: [id])
  planId           String
  plan             Plan     @relation(fields: [planId], references: [id])
  status           String   // 'active' | 'past_due' | 'canceled'
  currentPeriodEnd DateTime
  provider         String   // 'paystack'
  providerRef      String?
  createdAt        DateTime @default(now())
}

model Audit {
  id        String   @id @default(cuid())
  companyId String
  actorId   String?
  type      String   // 'payment' | 'job' | 'settings' | 'partner' | 'subscription' | 'integration'
  action    String
  meta      Json
  createdAt DateTime @default(now())
}